#
# GAWK script to extract both path and remote definitions from a
#   git submodule foreach --recursive git remote -v
# run.
#

BEGIN {
	submodule_path = ".";
	idx = 0;

	printf("#! /bin/bash\n");
	printf("# generated by collect_git_add_recursively.sh\n");
	printf("pushd $(dirname $0)       2> /dev/null\n");
	printf("\n");
	printf("cd ..\n");
	printf("git submodule update --init\n");
	printf("git submodule update --init --recursive\n");
	printf("\n");
	printf("util/git_checkout_submodules_head.sh\n");
	printf("\n");
	printf("\n");
	printf("\n");
}

/Entering '/	{
	# because MSys gawk doesn't support match() with 3 arguments :-((
	split($0, a, "'");
	submodule_path = a[2];
	#printf("Selecting path [%s]\n", submodule_path);
	next;
}

/\(fetch\)/	{
	#printf("line: [%s] %d\n", " " $0, match(":: " $0, /[\t ]origin[\t ]/));
	if (match(" " $0, /[\t ]origin[\t ]/))
	{
		#printf("skipped line: [%s]\n", $0);
		next;
	}
	if (match($0, / Win7DEV /))
	{
		next;
	}
	stmts[++idx] = sprintf("if test -d %s ; then pushd %s ; git remote add %s %s ; popd; fi", submodule_path, submodule_path, $1, $2);
	#printf("# id %d: %s\n", idx, stmts[idx]);
	next;
}

	{
	next;
}

END	{
	asort(stmts);
	for (i = 1; i <= idx; i++)
	{
		printf("%s\n", stmts[i]);
	}
	printf("\n");
	printf("popd       2> /dev/null\n");
	printf("\n");
}

